name: Deploy to Firebase Hosting

on:
  push:
    branches:
      - main
    paths:
      - 'frontend/**'
      - '.github/workflows/**'

jobs:
  deploy:
    runs-on: ubuntu-latest
    env:
      GOOGLE_APPLICATION_CREDENTIALS: google-application-credentials.json

    steps:
      # Step 1: Checkout the repository
      - name: Checkout Repository
        uses: actions/checkout@v2

      # Step 2: Set up Node.js
      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '18'

      # Step 3: Cache dependencies (optional but good for speed)
      - name: Cache Dependencies
        uses: actions/cache@v3
        with:
          path: |
            ~/.npm
            ~/.cache/firebase
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      # Step 4: Install project dependencies (frontend) #
      - name: Install Dependencies
        run: npm ci

      # Step 5: Install Firebase CLI
      - name: Install Firebase CLI
        run: npm install -g firebase-tools

      # Step 6: Decode and prepare Google Application Credentials
      - name: Prepare Google Application Credentials
        shell: bash
        run: |
          echo "${{ secrets.FIREBASE_SERVICE_ACCOUNT }}" | base64 --decode > "google-application-credentials.json"
          echo "Service account credentials written to google-application-credentials.json"
          cat google-application-credentials.json | jq .client_email

      # Step 7: Deploy to Firebase Hosting
      - name: Deploy to Firebase Hosting
        env:
          GOOGLE_APPLICATION_CREDENTIALS: google-application-credentials.json
        run: |
          set -e
          firebase deploy --only hosting

      # Step 8: Remove the credentials file for security
      - name: Remove credentials file
        if: success() || failure()
        run: |
          rm google-application-credentials.json
